#!/bin/sh
#
# search-tenders
# chkconfig: 2345 80 10
# pidfile: /run/search-tenders.pid
#
### BEGIN INIT INFO
# Provides:           search-tenders
# Required-Start:     $network $remote_fs $time $syslog
# Required-Stop:      $network $remote_fs $time $syslog
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Tenders Indexer and Search API
# Description:        Privides search api for prozorro
### END INIT INFO
#
# Author: Volodymyr Flonts <flyonts@gmail.com>
#

#set -e

PATH=/sbin:/usr/sbin:/bin:/usr/bin
PIDFILE="/run/search-tenders.pid"
DAEMON="/opt/search-tenders/bin/circusd"
CONTROL="/opt/search-tenders/bin/circusctl"
SOCKET="/opt/search-tenders/var/circus_endpoint"
WORKDIR="/opt/search-tenders/var"
LOGUSER="searchtenders:searchtenders"
LOGPATH="/var/log/search-tenders"

test -x $DAEMON || exit 0

. /lib/lsb/init-functions

daemon_control() {
  if [ ! -S $SOCKET ] ; then
    >&2 echo "Start daemon first"
    return
  fi
  echo -n $1 $2 "... "
  case "$2" in
  search*) $CONTROL $1 search_server ;;
  index*) $CONTROL $1 index_worker ;;
  *) echo "error: unknown worker $2" ;;
  esac
  echo
}

daemon_start() {
  if [ -n "$1" ] ; then
    daemon_control start $1
    return
  fi
  if [ -S $SOCKET ] ; then
    >&2 echo "Warning: $SOCKET already exists"
    if [ `ps uax | grep -c circusd` -ne 0 ] ; then
      >&2 echo "Error: Daemon already started"
      #return
    fi
  fi
  log_daemon_msg "Starting openprocurement.search service" "search-tenders"
  start_daemon -p $PIDFILE $DAEMON
  log_end_msg $?
  sleep 1
  # wait until stop
  for i in `seq 30` ; do
    if [ ! -s $PIDFILE -o ! -S $SOCKET ] ; then
      sleep 1
    else
      break
    fi
  done
  if [ -n "$LOGUSER" ] ; then
    chown $LOGUSER $LOGPATH/*.log
    chown $LOGUSER $PIDFILE
  fi
  echo "Starting $DAEMON pid" `cat $PIDFILE`
}

daemon_stop() {
  if [ -n "$1" ] ; then
    daemon_control stop $1
    return
  fi
  if [ ! -s $PIDFILE -a ! -S $SOCKET ] ; then
    >&2 echo "Service not run, nothing to stop"
    return
  fi
  echo "Stopping $DAEMON pid "`cat $PIDFILE`
  log_daemon_msg "Stopping openprocurement.search service" "search-tenders"
  $CONTROL quit
  log_end_msg $?
  # wait until stop
  for i in `seq 10` ; do
    if [ -s $PIDFILE -a -S $SOCKET ] ; then
      sleep 1
    else
      break
    fi
  done
 }

daemon_restart() {
  daemon_stop
  sleep 2
  daemon_start
}

daemon_reload() {
  if [ ! -S $SOCKET ] ; then
    >&2 echo "Service not run, nothing to reload"
  fi
  $CONTROL restart
  sleep 5
  # restore pidfile if missed
  if [ ! -s $PIDFILE -a -S $SOCKET ] ; then
    $CONTROL dstats | awk '$2~/python/{print $1}' >$PIDFILE
  fi
}

daemon_status() {
  if [ -S $SOCKET ] ; then
    # echo "Pidfile $PIDFILE pid" `cat $PIDFILE`
    $CONTROL status
  else
    if [ -s $PIDFILE ] ; then
      echo dead, but pidfile exists
    else
      echo dead
    fi
  fi
}


case "$1" in
start*) daemon_start $2
  ;;
stop*) daemon_stop $2
  ;;
stat*) daemon_status
  ;;
restart*) daemon_restart
  ;;
reload*) daemon_reload
  ;;
force-reload) daemon_reload
  ;;
*) echo "Usage: $0 {start|stop|status|reload|force-reload|restart}" 1>&2
  ;;
esac

