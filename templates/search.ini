[server:main]
use = egg:gunicorn#main
host = ${options['host']}
port = ${options['port']}
workers = ${options['workers']}
{% if options['threads'] %}
threads = ${options['threads']}
{% endif %}{% if options['worker'] %}
worker_class = ${options['worker']}
{% endif %}
pidfile = ${parts.buildout.directory}/var/run/search_server.pid
proc_name = search_server
max_requests = 10000
timeout = 30


[app:main]
use = egg:openprocurement.search#search_server
timezone = ${options['timezone']}
secret_key = 123456
{% if options['debug'] %}
debug = true
{% endif %}

[search_engine]
;slave_mode = http://127.0.0.1:8484/heartbeat?key=123456
;slave_wakeup = 600

elastic_host = 127.0.0.1:9200
index_names  = ${parts.buildout.directory}/var/index_names

;; rename index prefix
;; ===================
;rename_tenders = sandbox_tenders
;rename_plans = sandbox_plans
;rename_ocds = sandbox_ocds
;rename_orgs = sandbox_orgs

;; reindex period settings
;; =======================
;; first number period in days, second day of week
;tender_reindex = 10,6
;plan_reindex = 20,7
;ocds_reindex = 30,7

;; orgs edrpou database
;; ====================
;orgs_db = ${parts.buildout.directory}/edrpou/edrpou.db
;orgs_queue = 1000

;; ocds source
;; =========== 
ocds_dir = ${parts.buildout.directory}/var/ocds
;ocds_mask = ocds-*.json
;ocds_skip_until = 2016-01-01

;; tender source
;; =============
api_key = ""
api_url = https://lb.api-sandbox.openprocurement.org
api_version = 0
;api_mode = _all_
;skip_until = 2016-01-01
;preload = 100000
;limit = 1000

;; plan source
;; ===========
plan_api_key = ""
plan_api_url = https://lb.api-sandbox.openprocurement.org
plan_api_version = 0
;plan_api_mode = _all_
;plan_skip_until = 2016-01-01
;plan_preload = 100000
;plan_limit = 1000

;; common settings
;; ===============
;async_reindex = 1
;ignore_errors = 1
;error_wait = 30
index_speed = 100
update_wait = 5
start_wait = 5
timeout = 30


[update_orgs]
pidfile = ${parts.buildout.directory}/var/run/update_orgs.pid
update_days = 30


;; logger settings
;; ===============
[loggers]
keys = root, restkit.client, openprocurement.search

[handlers]
keys = stdout, stderr

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = stdout, stderr

[logger_restkit.client]
level = ERROR
handlers =
qualname = restkit.client

[logger_openprocurement.search]
level = INFO
handlers =
qualname = openprocurement.search

[handler_stdout]
;class = openprocurement.search.InfoHandler
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[handler_stderr]
class = StreamHandler
args = (sys.stderr,)
level = WARNING
formatter = generic

[formatter_generic]
;format = %(asctime)s %(levelname)s [%(name)s] %(message)s
format = %(asctime)s %(levelname)s [%(processName)-15s %(process)5d] %(message)s
